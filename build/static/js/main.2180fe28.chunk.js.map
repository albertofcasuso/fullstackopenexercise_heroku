{"version":3,"sources":["services/dataService.js","components/Persons.js","components/Search.js","components/Input.js","components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","post","id","delete","put","Persons","props","persons","search","click","personList","filter","person","name","toLowerCase","includes","map","persona","key","className","number","onClick","Search","value","onChange","Input","onSubmit","nameValue","numberValue","numberChange","nameChange","type","Notification","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearch","errorMessage","setErrorMessage","useEffect","dataService","notas","event","target","preventDefault","personObject","some","per","find","changedPersona","window","confirm","setTimeout","catch","error","console","log","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2180fe28.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst fetchData = () => {\n  const request = axios.get(baseURL).then(response => response.data)\n  return request\n}\n\nconst postData = (newObject) => {\n  return axios.post(baseURL,newObject)\n}\n\nconst deleteData = (id) => {\n  return axios\n  .delete(`${baseURL}/${id}`)\n    .then(response=>response.data)\n}\n\nconst updateData = (id,newObject) => {\n  return axios.put(`${baseURL}/${id}`, newObject)\n}\n\nexport default {\n  fetchData,\n  postData,\n  deleteData,\n  updateData\n}\n","import React from 'react'\n\nconst Persons = (props) => {\n\n  const {persons} = props\n  const {search} = props\n  const {click} = props\n\n  const namesToShow = search ? persons.filter(person => person.name.toLowerCase().includes(search)) : persons\n\n  const personList = namesToShow.map(persona =>\n    <li key={persona.id} className='persona'>\n      {persona.name}: {persona.number}\n      <button onClick={()=>click(persona.id)}>Delete</button>\n    </li>)\n\n\n\n  return(\n    <div>\n    <ul>{personList}</ul>\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Search = (props) => {\n  const {value} = props\n  const {onChange} = props\n  return(\n    <div>\n      <p>Search by name: </p>\n      <input value={value} onChange={onChange}/>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Input = (props) => {\n  const {onSubmit} = props\n  const {nameValue} = props\n  const {numberValue} = props\n  const {numberChange} = props\n  const {nameChange} = props\n\n  return(\n    <div>\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameValue} onChange={nameChange}/>\n      </div>\n      <div>\n        number: <input value={numberValue} onChange={numberChange}/>\n     </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\n\nconst Notification = (props) =>{\n\n  const {message} = props\n\n  if(message===null){\n    return null\n  }\n\n  return(\n    <div className='error'>\n    {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport dataService from './services/dataService'\nimport Persons from './components/Persons'\nimport Search from './components/Search'\nimport Input from './components/Input'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const fetchData = () => {\n    dataService.fetchData()\n    .then(notas => setPersons(notas))\n  }\n\n  useEffect(fetchData,[])\n\n  const handleName = (event) => {\n    setNewName(event.target.value)\n\n  }\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    const existeNombre = persons.some(persona => persona.name === newName)\n\n    if(existeNombre){\n      const per = persons.find(persona => persona.name === newName)\n\n      const changedPersona = {...per,number:newNumber}\n\n      const confirm = window.confirm(`${per.name} already exists, change number?`)\n      if(confirm){\n        dataService\n        .updateData(per.id,changedPersona)\n        .then(response=>{\n          setPersons(persons.map(persona=>persona.name===newName?response.data:persona))\n          setErrorMessage(`Has cambiado el numero de: ${per.name}`)\n          setTimeout(() => {setErrorMessage(null)}, 3000)\n        })\n        .catch(error => {\n          setErrorMessage(`No se puede cambiar el numero de ${per.name}`)\n          console.log(error)\n          setTimeout(() => {setErrorMessage(null)}, 3000)\n        })\n      }\n      }else{\n        dataService.postData(personObject).then(response => {\n          setPersons(persons.concat(response.data))\n          setErrorMessage(`Has añadido a: ${newName}`)\n          setTimeout(() => {setErrorMessage(null)}, 3000)\n        })\n      }\n    //si NO existe lo añade y muestra en pantalla\n  }\n\n  const handleSearch = (event) =>{\n    setSearch(event.target.value)\n  }\n\n  const handleDelete = (id) => {\n    const newPersons = persons.filter(persona => persona.id !== id?persona:null)\n    const persona = persons.find(persona => persona.id === id)\n\n    if(window.confirm(`Seriously delete ${persona.name}?`)){\n    dataService.deleteData(id).then(setPersons(newPersons))\n    }\n    else return null\n  }\n\n  return (\n    <div>\n     <h2>Phonebook</h2>\n     <Search value={searchName} onChange={handleSearch}/>\n\n     <h2>Add new person:</h2>\n     <Notification message={errorMessage}/>\n     <Input onSubmit={addPerson} nameValue={newName} numberValue={newNumber} numberChange={handleNumber} nameChange={handleName}/>\n\n     <h2>Numbers</h2>\n     <Persons persons={persons} search={searchName} click={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}